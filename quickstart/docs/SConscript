#! /usr/bin/env python

# Only required when WAVES is not installed as a package, e.g. for local testing in WAVES repository.
try:
    import waves
except ModuleNotFoundError:
    sys.path.insert(0, str(pathlib.Path('..').resolve()))
    import waves

# Inherit the parent construction environment
Import(['env', 'project_variables'])

# Set empty alias return list
alias_list = []

# Perform variable substitution on Sphinx configuration file
env.Substfile(
    "conf.py.in",
    SUBST_DICT=waves.builders.substitution_syntax(project_variables))

# Explicit Sphinx documentation dependency list
documentation_file_list = [
    'conf.py',
    'README.txt',  # Copied from README.rst to docs build directory by root SConscript
    'environment.txt',  # Copied from environment.txt to docs build directory by root SConscript
    'api.rst',
    'cli.rst',
    'build.txt',
    'changelog.rst',
    'contribution.txt',
    'dependencies.txt',
    'devops.rst',
    'documentation.txt',
    'glossary.rst',
    'index.rst',
    'mesh_convergence.rst',
    'mesh_convergence_conclusions.txt',
    'mesh_convergence_stress.png',
    'mesh_convergence_stress.pdf',
    'nominal.rst',
    'nominal_conclusions.txt',
    'project_brief.txt',
    'references.bib',
    'release_philosophy.rst',
    'simulation_description.txt',
    'simulation_description_short.txt',
    'simulation_material.txt',
    'simulation_summary.rst',
    'single_element_schematic.png',
    'single_element_schematic.pdf',
    'stress_strain_comparison.pdf',
    'stress_strain_comparison.png',
    'targets.txt',
    'user.rst',
    'waves_logo_brandmark_smaller.png',
    'zreferences.rst',
    '_static/custom.css'
]

# TODO: os agnostic pathsep for the html directory
# https://re-git.lanl.gov/aea/python-projects/waves/-/issues/4
sphinx_options = '-W'
html = env.Command(
    target=[Dir('html')],
    source=documentation_file_list,
    action=f"{env['sphinx_build']} ${{sphinx_options}} -b html ${{TARGET.dir.abspath}} ${{TARGET.dir.abspath}}/html",
    sphinx_options=sphinx_options)
env.Clean(html, Dir('html'))
env.AlwaysBuild(html)
alias_list.extend(env.Alias('html', html))

latexpdf = env.Command(
    target=[Dir('latex')],
    source=documentation_file_list,
    action=f"{env['sphinx_build']} -M latexpdf ${{TARGET.dir.abspath}} ${{TARGET.dir.abspath}}")
env.Clean(latexpdf, Dir('latex'))
env.AlwaysBuild(latexpdf)
alias_list.extend(env.Alias('latexpdf', latexpdf))

# Collector alias to build all documentation
alias_list.extend(env.Alias('documentation', html + latexpdf))

if not env['sphinx_build']:
    print(f"Program 'sphinx-build' was not found in construction environment. Ignoring Sphinx target(s)")
    Ignore(['.', 'html', 'html'], html)
    Ignore(['.', 'latex', 'latexpdf'], latexpdf)
else:
    env.Default(html)

# Return the alias list to SConstruct for help message output
Return('alias_list')
