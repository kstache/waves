#! /usr/bin/env python

import pathlib

import waves

# Inherit the parent construction environment
Import(["env", "project_variables"])

# Set empty workflow list
report = []

# Perform variable substitution on Sphinx configuration file
report.extend(env.Substfile(
    "conf.py.in",
    SUBST_DICT=waves.builders.substitution_syntax(project_variables)))

# Copy project root files required by the documentation
root_files = [("README.txt", "#/README.rst")]
for target, source in root_files:
    report.extend(env.Command(
        target=[target],
        source=[source],
        action=Copy("$TARGET", "$SOURCE")))

# Copy documentation source files re-used in the report
documentation_abspath = env["documentation_abspath"]
report_copy_list = [
    documentation_abspath / "nominal.rst",
    documentation_abspath / "project_brief.txt",
    documentation_abspath / "zreferences.rst",
    documentation_abspath / "references.bib",
    documentation_abspath / "targets.txt",
    documentation_abspath / "simulation_description.txt",
    documentation_abspath / "simulation_description_short.txt",
    documentation_abspath / "simulation_material.txt",
    documentation_abspath / "single_element_schematic.pdf",
    documentation_abspath / "stress_strain_comparison.pdf",
    documentation_abspath / "theory.txt",
    documentation_abspath / "mesh_convergence.rst",
    documentation_abspath / "mesh_convergence_stress.pdf",
    documentation_abspath / "mesh_convergence_conclusions.txt",
    documentation_abspath / "nominal_conclusions.txt"
]
report_copy_list = [pathlib.Path(source_file) for source_file in report_copy_list]
report.extend(waves.builders.copy_substitute(
    report_copy_list,
    substitution_dictionary=waves.builders.substitution_syntax(project_variables)))

# PDF Report build task
report_source_list = ["index.rst"] + [source_file.name.rstrip(".in") for source_file in report_copy_list]
report_directory = Dir("latex")
report.extend(env.Command(
    target=[report_directory],
    source=report_source_list,
    action=f"{env['sphinx_build']} -M latexpdf ${{TARGET.dir.abspath}} ${{TARGET.dir.abspath}}"))
env.AlwaysBuild(report)
env.Clean(report, report_directory)

# Collector alias to build the PDF report
parent_directory = Dir(".").srcnode().name
env.Alias(parent_directory, report)
