workflow:
  rules:  # Do not create pipelines for tag updates
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

stages:
  - environment
  - version
  - test
  - build
  - deploy

before_script:
  # FIXME: Trace the Gitlab-Runner Git-LFS bug. Possible starting point(s):
  #   * https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4742
  #   * https://gitlab.com/gitlab-org/gitlab-runner/-/merge_requests/1599
  - git status
  - git lfs install
  - git status
  # TODO: recover environment path from modulefile instead of assuming the sstelmo path(s)
  # https://re-git.lanl.gov/aea/python-projects/waves/-/issues/7
  - aea_projects='/projects'
  - aea_deploy_directory="${aea_projects}/python"
  - aea_conda_channel="${aea_deploy_directory}/aea-conda"
  - aea_modulefiles=${aea_deploy_directory}/modulefiles
  - environment='waves-env'
  - environment_path="${aea_deploy_directory}/${environment}"
  - conda_options='--yes --channel conda-forge'
  # Activate the project specific environment from the project specific modulefile
  - module use ${PWD}/modulefiles
  - module load ${environment}
  # Make LaTeX available
  # TODO: Account for different systems, e.g. AEA servers and HPC, modulefiles
  - module load texlive
  # Build the Conda environment if it's missing
  # TODO: kick off 'environment' job for missing environments instead of re-creating the environment build logic here
  # https://re-git.lanl.gov/aea/python-projects/waves/-/issues/8
  - |
      if [[ ! -d ${environment_path} ]]; then
          export ALL_PROXY="proxyout.lanl.gov:8080"
          export HTTP_PROXY="http://$ALL_PROXY"
          export HTTPS_PROXY=$HTTP_PROXY
          conda create --prefix ${environment_path} --file environment.txt ${conda_options};
          unset ALL_PROXY
          unset HTTP_PROXY
          unset HTTPS_PROXY
      fi
  # FIXME: (1) Without setting this to false, Git webserver API calls to re-git.lanl.gov will throw errors about
  # self-signed certificates. Work on CI server and Gitlab webserver configurations so that this is no longer
  # necessary. There is a matching "FIXME: (1)" tag where the process is reversed that must also be removed when this
  # is fixed.
  - git config --local http.sslVerify false

after_script:
  # FIXME: (1) Reset the repository Git configuration to preserve ssl verifications. Remove when the server(s)
  # configurations no longer require us to drop ssl verifications.
  - git config --local http.sslVerify true

environment:
  stage: environment
  variables:
    GIT_STRATEGY: clone
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev"
      changes:
        - "modulefiles/*"
        - "environment.txt"
  script:
    # FIXME: "cp: relocation error: ... in file libattr.so.1 ..."
    # https://re-git.lanl.gov/aea/python-projects/waves/-/issues/227
    - unset LD_LIBRARY_PATH
    # Set LANL proxies
    - export ALL_PROXY="proxyout.lanl.gov:8080"
    - export HTTP_PROXY="http://$ALL_PROXY"
    - export HTTPS_PROXY=$HTTP_PROXY
    # Re-build the Conda environment on changes to environment files
    - conda create --prefix ${environment_path} --file environment.txt ${conda_options}
    # Remove write permissions from group to avoid accidental environment changes
    - chmod -R 755 ${environment_path}
    # place the common modulefiles in an accessible location
    - cp ${PWD}/modulefiles/* ${aea_modulefiles}
    # Link SCons man pages to the expected MANPATH location
    - ln ${environment_path}/scons.1 ${environment_path}/man/man1/scons.1
    - ln ${environment_path}/sconsign.1 ${environment_path}/man/man1/sconsign.1
    - ln ${environment_path}/scons-time.1 ${environment_path}/man/man1/scons-time.1
  tags:
    - sstelmo-shell-aea

microbump:
  stage: version
  variables:
    GIT_STRATEGY: clone
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    # FIXME: "cp: relocation error: ... in file libattr.so.1 ..."
    # https://re-git.lanl.gov/aea/python-projects/waves/-/issues/227
    - unset LD_LIBRARY_PATH
    # Conditionally "bump" micro version number. setuptools_scm already bumps number, just need to strip local version.
    - old_version=$(python -m setuptools_scm)
    # First capture group is the major.minor.micro numbers
    # Second capture group is everything following micro
    - version_regex='\([0-9]\+\.[0-9]\+\.[0-9]\+\)\(.*\)'
    # Returns clean production tag regardless if tagged already
    - production_version=$(echo ${old_version} | sed "s/${version_regex}/\1/g")
    # Catch unexpected production version regex and exit with error if suffix is found
    - suffix=$(echo ${production_version} | sed "s/${version_regex}/\2/g")
    - |
        if [ -n "${suffix}" ]; then
            echo "Could not resolve the production version from ${old_version}. Left with ${production_version} and ${suffix}."
            exit 1
        fi
    - developer_version=${production_version}+dev
    # Tag production commit and previous developer commit. Continue if already tagged.
    - git config user.name "${GITLAB_USER_NAME}"
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git remote add oauth2-origin https://gitlab-ci-token:${GITLAB_ACCESS_TOKEN}@re-git.lanl.gov/${CI_PROJECT_PATH}.git
    - git tag -a ${production_version} -m "production release ${production_version}" || true
    # Assume last merge was dev->main. Pick previous.
    - last_merge_hash=$(git log --pretty=format:"%H" --merges -n 2 | tail -n 1)
    - git tag -a ${developer_version} -m "developer pre-release ${developer_version}" ${last_merge_hash} || true
    - git push oauth2-origin --tags
  tags:
    - shell-aea

fast-test:
  stage: test
  variables:
    GIT_STRATEGY: clone
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - project_root=${PWD}
    # Project unit tests
    - scons . --keep-going --unconditional-build
    # Set PYTHONPATH for WAVES import in tutorials/quickstart system/integration/regression tests
    - export PYTHONPATH=${project_root}:$PYTHONPATH
    # WAVES CLI regression tests
    - quickstart_regression_directory="${project_root}/test_quickstart"
    - python -m waves.waves quickstart ${quickstart_regression_directory}
    - cd ${quickstart_regression_directory}
    - scons . --jobs=4
    # Regression test the files used in the tutorial documentation
    - cd ${project_root}/tutorials
    - scons . --sconstruct=scons_quickstart_SConstruct --keep-going
    - scons . --sconstruct=scons_multiactiontask_SConstruct --keep-going
    - scons . --sconstruct=waves_quickstart_SConstruct --keep-going
    - scons . --sconstruct=tutorial_00_SConstruct --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_01_geometry_SConstruct --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_02_partition_mesh_SConstruct --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_03_solverprep_SConstruct --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_04_simulation_SConstruct --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_cubit_SConstruct --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_escape_sequences_SConstruct --solve-cpus=1 --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_builder_post_actions_SConstruct --keep-going --unconditional-build
    # TODO: Figure out how to authenticate the institutional account without expanding the user credential exposure to
    # AEA Gitlab group members. Until then, the SSH remote execution can't be integration/regression tested.
    #- scons . --sconstruct=tutorial_remote_execution_SConstruct --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_sbatch_SConstruct --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_05_parameter_substitution_SConstruct --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_06_include_files_SConstruct --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_07_cartesian_product_SConstruct --jobs=4 --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_07_latin_hypercube_SConstruct --jobs=4 --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_07_sobol_sequence_SConstruct --jobs=4 --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_08_data_extraction_SConstruct --jobs=4 --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_09_post_processing_SConstruct --jobs=4 --keep-going --unconditional-build
    - scons datacheck --sconstruct=tutorial_10_regression_testing_SConstruct --jobs=4 --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_11_archival_SConstruct --jobs=4 --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_task_reuse_SConstruct --jobs=4 --keep-going --unconditional-build
    - scons . --sconstruct=tutorial_mesh_convergence_SConstruct --jobs=4 --keep-going --unconditional-build
    - python -m waves.waves build --max-iterations=4 tutorial_extend_study --sconstruct=tutorial_extend_study_SConstruct --jobs=4
  tags:
    - shell-aea

conda-build:
  stage: build
  variables:
    GIT_STRATEGY: clone
  dependencies: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "dev"
  script:
    # Set the LANL internal proxies
    - export ALL_PROXY="proxyout.lanl.gov:8080"
    - export HTTP_PROXY="http://$ALL_PROXY"
    - export HTTPS_PROXY=$HTTP_PROXY
    # Override default permissions. Set group to rx with no write permissions.
    - umask 0022
    - output_folder='conda-build-artifacts'
    - mkdir ${output_folder}
    - VERSION=$(python -m setuptools_scm) mamba build recipe --channel conda-forge --no-anaconda-upload --croot /scratch/${USER}/conda-build --output-folder ${output_folder}
  artifacts:
    expire_in: '2 hrs'
    paths:
      - conda-build-artifacts/noarch/waves-*-*.tar.bz2
  tags:
    - shell-aea

deploy:
  stage: deploy
  variables:
    GIT_STRATEGY: clone
  dependencies:
    - conda-build
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "dev"
  script:
    # FIXME: "cp: relocation error: ... in file libattr.so.1 ..."
    # https://re-git.lanl.gov/aea/python-projects/waves/-/issues/227
    - unset LD_LIBRARY_PATH
    # Override default permissions. Set group to rx with no write permissions.
    - umask 0022
    # Copy Conda package to AEA Conda Channel
    - cp conda-build-artifacts/noarch/waves-*-*.tar.bz2 ${aea_conda_channel}/noarch
    # Change group for access by all W-13 staff and prevent accidental modification by institutional account in CI jobs
    - chgrp w13users ${aea_conda_channel}/noarch/waves-*-*.tar.bz2 || true
    - chmod 555 ${aea_conda_channel}/noarch/waves-*-*.tar.bz2 || true
    # Update the AEA Conda Channel index
    - conda index ${aea_conda_channel}
    # Troubleshooting conda channel deploy and index update
    - conda search --channel file://${aea_conda_channel}/ --override-channels waves
  tags:
    - sstelmo-shell-aea

# It MUST be called pages
pages:
  stage: deploy
  variables:
    GIT_STRATEGY: clone
  dependencies: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "dev"
  script:
    # FIXME: "cp: relocation error: ... in file libattr.so.1 ..."
    # https://re-git.lanl.gov/aea/python-projects/waves/-/issues/227
    - unset LD_LIBRARY_PATH
    # Set job-wide variables and directories
    - project_root=$PWD
    - rm -rf public && mkdir -p public
    - cp docs/_static/index.html public
    # Every documentation version must be re-built for *every* gitlab-pages job execution
    # Reference: https://gitlab.com/gitlab-org/gitlab/-/issues/33822
    - git fetch origin
    - git branch -a
    - documentation_branches="main dev"
    - |
        for ref in ${documentation_branches}; do
            cd ${project_root}
            git checkout $ref
            git reset --hard origin/$ref
            mkdir -p public/$ref/waves-eabm
            # Build WAVES HTML documentation. Clean up after to avoid leftover targets from main/dev filename differences.
            # Clean instead of "rm" to help catch incomplete target clean operations.
            scons . --clean --unconditional-build
            scons html --unconditional-build
            cp -r build/docs/html/* ${project_root}/public/$ref
            scons . --clean --unconditional-build
            # Build WAVES-EABM HTML documentation
            cd quickstart
            PYTHONPATH=${project_root} scons . --clean
            PYTHONPATH=${project_root} scons html
            cp -r build/docs/html/* ${project_root}/public/$ref/waves-eabm
            PYTHONPATH=${project_root} scons . --clean
            cd ${project_root}
        done
  artifacts:
    paths:
      # It MUST be called public
      - public
  tags:
    - shell-aea
