package:
  name: waves
  # TODO: Figure out how to use pyproject.toml and a Conda build Jinja template
  version: {{ VERSION }}

about:
  home: https://re-git.lanl.gov/aea/python-projects/waves
  license: BSD-3-Clause
  license_file: LICENSE.txt
  summary: 'Parameteric study computational engineering workflow tool'
  description: |
    WAVES (LANL code C23004) is a computational engineering workflow tool that integrates parametric studies with
    traditional software build systems.
  doc_url: https://aea.re-pages.lanl.gov/python-projects/waves/main/index.html
  dev_url: https://re-git.lanl.gov/aea/python-projects/waves

source:
  path: '..'

build:
  noarch: python
  number: 0
  script_env:
    - SETUPTOOLS_SCM_PRETEND_VERSION={{ VERSION }}
  script:
    # Build and install Conda package
    - $PYTHON -m build --no-isolation
    - $PYTHON -m pip install dist/$PKG_NAME-$PKG_VERSION.tar.gz --no-deps --ignore-installed -v --no-build-isolation
    - $PYTHON -m pip show $PKG_NAME
    # Build man page and HTML documentation to bundle in Conda package
    - scons man html-internal
    - $PYTHON package_documentation.py
  ignore_run_exports:
    - python_abi

requirements:
  build:
    - scons >=4
    - sphinx >=5.1
    - sphinx-argparse
    - sphinx-copybutton >=0.5.1
    - sphinx_rtd_theme >=1
    - sphinxcontrib-bibtex
  host:
    - python
    - python-build
    - pip
    - setuptools >=62
    - setuptools_scm[toml] >=6.2,<8
  run:
    - python >=3.8
    - h5netcdf
    - h5py
    - matplotlib-base
    - networkx
    - numpy
    - pyyaml
    - salib >=1
    - scipy >=1.7
    - scons
    - xarray

test:
  requires:
    - h5netcdf
    - h5py
    - matplotlib-base
    - numpy
    - pandas
    - pytest
    - pytest-xdist
    - pyyaml
    - salib >=1
    - scipy >=1.7
    - scons
    - seaborn
    - sed
    - setuptools_scm
    - xarray
  imports:
    - waves
  commands:
    - test_root=${PWD}
    # Tests that depend on correct install path
    - waves docs --print-local-path
    # Test as-installed project unit tests
    - cd $SP_DIR/$PKG_NAME
    # FIXME: Trace the source of interference between the builder tests and the find_program tests.
    # Use ``pytest`` when fixed
    - pytest -vvv -m "not programoperations and not systemtest"
    - pytest -vvv -m "programoperations"
    - pytest -v -n 4 -m "systemtest" --tb=short
    - cd ${test_root}
    # WAVES CLI regression tests
    - quickstart_regression_directory="${test_root}/test_quickstart"
    - waves quickstart ${quickstart_regression_directory}
    - cd ${quickstart_regression_directory}
    - scons . --jobs=4 --ignore-documentation
    - cd ${test_root}
    - waves visualize nominal --sconstruct ${quickstart_regression_directory}/SConstruct --output-file ${quickstart_regression_directory}/nominal.svg
    # Regression test the files used in the tutorial documentation
    - tutorials_regression_directory="${test_root}/test_tutorials"
    - waves fetch tutorials --destination ${tutorials_regression_directory}
    - cd ${tutorials_regression_directory}
    - waves build --max-iterations=4 tutorial_extend_study --sconstruct=tutorial_extend_study_SConstruct --jobs=4
    - cd ${test_root}
