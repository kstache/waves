include: ".pipeline-common.yml"

stages:
  - environment
  - test
  - deploy

environment:
  extends:
    - .linux_before_script
    - .environment
  stage: environment
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
  tags:
    - shell-aea

conda-build:
  extends:
    - .linux_before_script
    - .conda-build
  stage: test
  dependencies: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
  tags:
    - shell-aea

# https://re-git.lanl.gov/aea/developer-operations/aea-conda
aea-conda-deploy:
  extends:
    - .linux_before_script
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == "main"
  variables:
    PARENT_CI_PROJECT_PATH: $CI_PROJECT_PATH
    PARENT_CI_COMMIT_BRANCH: $CI_COMMIT_BRANCH
    AEA_CONDA_PACKAGE_JOB: conda-build
    AEA_CONDA_PACKAGE_ARTIFACTS: conda-bld/noarch/waves-*-*.tar.bz2
  trigger:
    project: aea/developer-operations/aea-conda
    branch: main
    strategy: depend

pypi-deploy:
  extends:
    - .linux_before_script
  stage: deploy
  variables:
    GIT_STRATEGY: clone
  dependencies: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    # Only deploy to Gitlab PyPI registry for clean version tags
    - if [[ -z $(git tag --points-at HEAD) ]]; then exit 0; fi
    - scons html-internal man
    - cp -r build/docs/html-internal waves/docs
    - cp build/docs/man/*.1 waves/docs
    - python -m build
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  tags:
    - shell-aea

# It MUST be called pages
pages:
  extends:
    - .linux_before_script
  stage: deploy
  variables:
    GIT_STRATEGY: clone
  dependencies: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - project_root=$PWD
    - rm -rf public && mkdir -p public/modsim-template
    # Ensure the ``_version.py`` file is created
    - scons html-internal --clean && scons html-internal
    - cp -r build/docs/html-internal/* public/
    # Build modsim template documentation
    - cd waves/modsim_template
    - PYTHONPATH=${project_root} scons html
    - cp -r build/docs/html/* ${project_root}/public/modsim-template
  artifacts:
    paths:
      # It MUST be called public
      - public
  tags:
    - shell-aea
