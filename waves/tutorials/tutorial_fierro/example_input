#! /usr/bin/env python
"""Fierro example input file workflow

Requires the following ``SConscript(..., exports=[])``

* ``env`` - The SCons construction environment with the following required keys

  * ``fierro`` - String path for the Abaqus executable
  * ``unconditional_build`` - Boolean flag to force building of conditionally ignored targets
"""

import pathlib

# Inherit the parent construction environment
Import("env")

# Simulation variables
build_directory = pathlib.Path(Dir(".").abspath)
workflow_name = build_directory.name

# Collect the target nodes to build a concise alias for all targets
workflow = []

# Fierro Solve
# TODO: WAVES always moves the STDOUT file to the end of the target list to aid in action construction. When the VTK
# files are added to the target list, the execution directory shifts to the VTK directory. Find a Fierro output request
# that writes to the CWD to use as a 'first target' and then add the VTK output files to the target list and remove the
# explicit clean request.
workflow.extend(env.FierroExplicit(
    target=["example_input.yaml.stdout"],
    source=["example_input.yaml"]
))
env.Clean(workflow, [Dir("vtk")])

# Collector alias based on build directory name
env.Alias(workflow_name, workflow)

if not env['unconditional_build'] and not env['fierro']:
    print(f"Program 'fierro' was not found in construction environment. Ignoring '{workflow_name}' target(s)")
    Ignore([".", workflow_name], workflow)
