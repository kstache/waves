#! /usr/bin/env python

import os
import pathlib

# Add build directory CLI arg
AddOption(
    "--build-dir",
    dest="build_dir",
    default="build",
    nargs=1,
    type="string",
    action="store",
    metavar="DIR",
    help="SCons build (variant) root directory. Relative or absolute path. (default: '%default')"
)
AddOption(
    "--unconditional-build",
    dest="unconditional_build",
    default=False,
    action="store_true",
    help="Boolean to force building of conditionally ignored targets, e.g. if the target's action program is missing" \
            " and it would normally be ignored. (default: '%default')"
)

# Inherit user's full environment
env = Environment(
    ENV=os.environ.copy(),
    build_dir=GetOption("build_dir"),
    unconditional_build=GetOption("unconditional_build")
)

# Always copy (no sym-links) when duplicating
env.SetOption("duplicate", "copy")

# Empty defaults list to avoid building all simulation targets by default
env.Default()

# Find required programs for conditional target ignoring and absolute path for use in target actions
conf = env.Configure()
env["ABAQUS_PROGRAM"] = conf.CheckProg(env.Detect([
    "/apps/abaqus/Commands/abq2023",
    "/usr/projects/ea/abaqus/Commands/abq2023",
    "abq2023",
    "abaqus"
]))
conf.Finish()
if env["ABAQUS_PROGRAM"]:
    env.PrependENVPath("PATH", pathlib.Path(env["ABAQUS_PROGRAM"]).parent)

# Add workflow(s)
SConscript("SConscript", variant_dir=env["build_dir"], exports={"env": env}, duplicate=True)
