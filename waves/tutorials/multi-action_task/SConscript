import pathlib

Import('env')

# Write project builders for re-use in task definitions
abaqus_journal = Builder(
    action="cd ${TARGET.dir.abspath} && ${abaqus_program} cae -noGui ${SOURCE.abspath} " \
           "${abaqus_options} -- ${journal_options}")

abaqus_solver = Builder(
    action="cd ${TARGET.dir.abspath} && ${abaqus_program} -job ${job_name} -input ${SOURCE.filebase} " \
           "${abaqus_options} -interactive -ask_delete no")

# Add custom builders
env.Append(BUILDERS={
    'AbaqusJournal': abaqus_journal,
    'AbaqusSolver': abaqus_solver
})

# Geometry, Partition, Mesh
env.Command(
    target=["rectangle_mesh.cae", "rectangle_mesh.inp"],
    source=["rectangle_geometry.py", "rectangle_partition.py", "rectangle_mesh.py", "abaqus_journal_utilities.py"],
    action=["cd ${TARGET.dir.abspath} && ${abaqus_program} cae -noGui ${SOURCE.dir.abspath}/rectangle_geometry.py " \
            "${abaqus_options} -- --output-file ${TARGET.filebase}",
            "cd ${TARGET.dir.abspath} && ${abaqus_program} cae -noGui ${SOURCE.dir.abspath}/rectangle_partition.py " \
            "${abaqus_options} -- --input-file ${TARGET.filebase} --output-file ${TARGET.filebase}",
            "cd ${TARGET.dir.abspath} && ${abaqus_program} cae -noGui ${SOURCE.dir.abspath}/rectangle_mesh.py " \
            "${abaqus_options} -- --input-file ${TARGET.filebase} --output-file ${TARGET.filebase}"],
    abaqus_program=env['abaqus']
)

# SolverPrep
abaqus_source_list = [
    "rectangle_compression.inp",
    "assembly.inp",
    "boundary.inp",
    "field_output.inp",
    "materials.inp",
    "parts.inp",
    "rectangle_mesh.inp",
    "history_output.inp"
]

solve_targets = [
    "rectangle_compression.odb",
    "rectangle_compression.dat",
    "rectangle_compression.msg",
    "rectangle_compression.com",
    "rectangle_compression.prt",
    "rectangle_compression.sta"
]

target = env.AbaqusSolver(
    target=solve_targets,
    source=abaqus_source_list,
    abaqus_program=env['abaqus'],
    job_name="rectangle_compression",
    abaqus_options="-double both"
)

# Collector alias named after the model simulation
env.Alias("rectangle", target)
