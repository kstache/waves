#! /usr/bin/env python
import waves

Import('env')

# Collect the target nodes to build concise target alias(es)
artifacts = []
workflow = []

# Geometry, Partition, Mesh
artifacts.extend(env.PythonScript(
    target=["rectangle_gmsh.inp"],
    source=["rectangle.py"],
    subcommand_options="--output-file=${TARGET.abspath}",
    action_suffix=env["action_suffix"]
))

artifacts.extend(env.PythonScript(
    target=["rectangle_mesh.inp"],
    source=["strip_heading.py", "rectangle_gmsh.inp"],
    subcommand_options="--input-file=${SOURCES[1].abspath} --output-file=${TARGET.abspath}",
    action_suffix=env["action_suffix"]
))

# CalculiX Solve
artifacts.extend(env.Command(
    target=[f"rectangle_compression.{suffix}" for suffix in ("frd", "dat", "sta", "cvg", "12d", "frd.stdout")],
    source=["rectangle_compression.inp"],
    action=["cd ${TARGET.dir.abspath} && ${CCX_PROGRAM} ${program_required} ${program_options} ${action_suffix}"],
    job_name="rectangle_compression",
    program_required="-i ${SOURCE.filebase}",
    program_options="-job ${job_name}",
    action_suffix=env["action_suffix"]
))

# Extract
workflow.extend(env.PythonScript(
    target=["rectangle_compression.vtu"],
    source=["extract.py", "rectangle_compression.frd"],
    subcommand_options="--input-file ${SOURCES[1].abspath}",
    action_suffix=env["action_suffix"]
))
artifacts.extend(workflow)

# Collector alias named after the model simulation
env.Alias('rectangle', workflow)

if not env['unconditional_build'] and (not env["CCX_PROGRAM"] or not env["ccx2paraview"]):
    print("Program 'CalculiX (ccx)' or 'ccx2paraview' was not found in construction environment. " \
          "Ignoring 'rectangle' target(s)")
    Ignore([".", "rectangle"], workflow + artifacts)
