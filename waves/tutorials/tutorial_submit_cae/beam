#! /usr/bin/env python

import pathlib

# Inherit the parent construction environment
Import("env")

# Simulation variables
build_directory = pathlib.Path(Dir(".").abspath)
workflow_name = build_directory.name

# Collect the target nodes to build a concise alias for all targets
cae_prep = []
workflow = []

# Create the job-ready beam example CAE file
cae_prep.extend(env.Command(
    target=["beamExample.py"],
    source=["beam"],
    action=[
        "cd ${TARGET.dir.abspath} && ${abaqus} fetch job=beamExample",
        "echo \"mdb.saveAs(pathName='beam.cae')\" >> ${TARGET.abspath}"
    ],
    abaqus=env["abaqus"]
))

cae_prep.extend(env.AbaqusJournal(
    target=["beam.cae"],
    source=["beamExample.py"]
))

# Run the tutorial CAE job submission solution
workflow.extend(env.AbaqusJournal(
    target=["beam.odb"],
    source=["submit_cae.py", "beam.cae"],
    journal_options="--input-file ${SOURCES[1].abspath} --job-name beam --model-name Beam"
))

# Collector alias based on build directory name
env.Alias("create_beam_cae", cae_prep)
env.Alias(workflow_name, workflow)

if not env["abaqus"]:
    print(f"Program 'abaqus' was not found in construction environment. Ignoring '{workflow_name}' target(s)")
    Ignore([".", workflow_name], workflow)
