#! /usr/bin/env python

import pathlib

import waves

# Inherit the parent construction environment
Import('env')

# Set project-wide paths with os-agnostic path separators
project_dir = pathlib.Path(env['project_dir'])
abaqus_source_dir = env['abaqus_source_dir']
abaqus_source_abspath = project_dir / abaqus_source_dir

# Simulation variables
model = "single_element"

# Comment used in tutorial code snippets: marker-1

# Collect the target nodes to build a concise alias for all targets
workflow = []

# Geometry
journal_file = f"{model}_geometry"
journal_options = ""
workflow.extend(env.AbaqusJournal(
    target=[f"{journal_file}.cae", f"{journal_file}.jnl"],
    source=[f"{abaqus_source_abspath / journal_file}.py"],
    journal_options=journal_options))

# Comment used in tutorial code snippets: marker-2

# Partition
journal_file = f"{model}_partition"
journal_options = ""
workflow.extend(env.AbaqusJournal(
    target=[f"{journal_file}.cae", f"{journal_file}.jnl"],
    source=[f"{abaqus_source_abspath / journal_file}.py", f"{model}_geometry.cae"],
    journal_options=journal_options))

# Mesh
journal_file = f"{model}_mesh"
journal_options = ""
workflow.extend(env.AbaqusJournal(
    target=[f"{journal_file}.inp", f"{journal_file}.cae", f"{journal_file}.jnl"],
    source=[f"{abaqus_source_abspath / journal_file}.py", f"{model}_partition.cae"],
    journal_options=journal_options))

# Comment used in tutorial code snippets: marker-3

# SolverPrep
abaqus_source_list = [
    abaqus_source_abspath / f"{model}_compression.inp",
    abaqus_source_abspath / "assembly.inp",
    abaqus_source_abspath / "boundary.inp",
    abaqus_source_abspath / "field_output.inp",
    abaqus_source_abspath / "materials.inp",
    abaqus_source_abspath / "parts.inp",
    abaqus_source_abspath / "history_output.inp"
]
abaqus_source_list = [pathlib.Path(source_file) for source_file in abaqus_source_list]
workflow.extend(waves.builders.copy_substitute(abaqus_source_list))

# Comment used in tutorial code snippets: marker-4

# Collector alias based on parent directory name
parent_directory = Dir('.').srcnode().name
env.Alias(parent_directory, workflow)

if not env['unconditional_build'] and not env['abaqus']:
    print(f"Program 'abaqus' was not found in construction environment. Ignoring '{parent_directory}' target(s)")
    Ignore(['.', parent_directory], workflow)
