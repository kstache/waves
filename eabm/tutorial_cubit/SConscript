#! /usr/bin/env python

import pathlib

# Inherit the parent construction environment
Import('env')

# Set project-wide paths with os-agnostic path separators
project_dir = pathlib.Path(env['project_dir'])
cubit_source_dir = env['cubit_source_dir']
cubit_source_abspath = project_dir / cubit_source_dir

# Simulation variables
model = "single_element"

# Collect the target nodes to build a concise alias for all targets
workflow = []

# Geometry
journal_file = f"{model}_geometry"
journal_options = ""
workflow.extend(env.Python3(
    target=[f"{journal_file}.cae"],
    source=[f"{cubit_source_abspath / journal_file}.py"],
    journal_options=journal_options))

# Collector alias based on parent directory name
parent_directory = Dir('.').srcnode().name
env.Alias(parent_directory, workflow)

if env['conditional_ignore'] and not env['cubit']:
    print(f"Program 'cubit' was not found in construction environment. Ignoring '{parent_directory}' target(s)")
    Ignore(['.', parent_directory], workflow)
