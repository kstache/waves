#! /usr/bin/env python

import pathlib

# Inherit the parent construction environment
Import('env')

# Set project-wide paths with os-agnostic path separators
project_dir = pathlib.Path(env['PROJECT_DIR'])
abaqus_source_dir = env['ABAQUS_SOURCE_DIR']
abaqus_source_abspath = project_dir / abaqus_source_dir

# Simulation variables
model = "single_element"

# Geometry
journal_file = f"{model}_geometry"
journal_options = ""
geometry = env.AbaqusJournal(
    target=[f"{journal_file}.cae"],
    source=[f"{abaqus_source_abspath / journal_file}.py"],
    journal_options=journal_options)

# Partition
journal_file = f"{model}_partition"
journal_options = ""
partition = env.AbaqusJournal(
    target=[f"{journal_file}.cae"],
    source=[f"{abaqus_source_abspath / journal_file}.py", f"{model}_geometry.cae"],
    journal_options=journal_options)

# Mesh
journal_file = f"{model}_mesh"
journal_options = ""
mesh = env.AbaqusJournal(
    target=[f"{journal_file}.cae", f"{journal_file}.inp"],
    source=[f"{abaqus_source_abspath / journal_file}.py", f"{model}_partition.cae"],
    journal_options=journal_options)

# SolverPrep
abaqus_input_list = [
    f"#/{abaqus_source_dir}/single_element_compression.inp.in",
    f"#/{abaqus_source_dir}/amplitudes.inp.in",
    f"#/{abaqus_source_dir}/assembly.inp.in",
    f"#/{abaqus_source_dir}/boundary.inp.in",
    f"#/{abaqus_source_dir}/field_output.inp.in",
    f"#/{abaqus_source_dir}/materials.inp.in",
    f"#/{abaqus_source_dir}/parts.inp.in",
    f"#/{abaqus_source_dir}/history_output.inp.in"
]
solverprep = list()
for abaqus_input in abaqus_input_list:
    abaqus_input_path = pathlib.Path(abaqus_input)
    # Copy all files in list to build directory without changing extension
    solverprep.append(
        Command(
            target=abaqus_input_path.name,
            source=abaqus_input,
            action=Copy('${TARGET}', '${SOURCE}')))
    # Run substitution dictionary on anything with *.in template extension
    if abaqus_input_path.suffix == '.in':
        solverprep.append(Substfile(abaqus_input_path.name))

# Collector alias
env.Alias('${SOURCE_DIR.srcdir}', [geometry, partition, mesh] + solverprep)
