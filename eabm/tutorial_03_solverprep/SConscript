#! /usr/bin/env python

# Inherit the parent construction environment
Import('env')

# Simulation variables
model = "single_element"

# Geometry
journal_file = f"{model}_geometry"
journal_options = ""
geometry = env.AbaqusJournal(
    target=[f"{journal_file}.cae", f"{journal_file}.jnl", f"{journal_file}.log"],
    source=[f"{env['PROJECT_DIR']}/{env['ABAQUS_SOURCE_DIR']}/{journal_file}.py"],
    journal_options=journal_options)

# Partition
journal_file = f"{model}_partition"
journal_options = ""
partition = env.AbaqusJournal(
    target=[f"{journal_file}.cae", f"{journal_file}.jnl", f"{journal_file}.log"],
    source=[f"{env['PROJECT_DIR']}/{env['ABAQUS_SOURCE_DIR']}/{journal_file}.py", f"{model}_geometry.cae"],
    journal_options=journal_options)

# Mesh
journal_file = f"{model}_mesh"
journal_options = ""
mesh = env.AbaqusJournal(
    target=[f"{journal_file}.cae", f"{journal_file}.inp", f"{journal_file}.jnl", f"{journal_file}.log"],
    source=[f"{env['PROJECT_DIR']}/{env['ABAQUS_SOURCE_DIR']}/{journal_file}.py", f"{model}_partition.cae"],
    journal_options=journal_options)

# SolverPrep
abaqus_input_list = [
    f"{env['PROJECT_DIR']}/{env['ABAQUS_SOURCE_DIR']}/single_element_compression.inp",
    f"{env['PROJECT_DIR']}/{env['ABAQUS_SOURCE_DIR']}/amplitudes.inp",
    f"{env['PROJECT_DIR']}/{env['ABAQUS_SOURCE_DIR']}/assembly.inp",
    f"{env['PROJECT_DIR']}/{env['ABAQUS_SOURCE_DIR']}/boundary.inp",
    f"{env['PROJECT_DIR']}/{env['ABAQUS_SOURCE_DIR']}/field_output.inp",
    f"{env['PROJECT_DIR']}/{env['ABAQUS_SOURCE_DIR']}/materials.inp",
    f"{env['PROJECT_DIR']}/{env['ABAQUS_SOURCE_DIR']}/parts.inp",
    f"{env['PROJECT_DIR']}/{env['ABAQUS_SOURCE_DIR']}/history_output.inp"
]
solverprep = list()
for abaqus_input in abaqus_input_list:
    solverprep.append(env.Substfile(
        abaqus_input,
        SUBST_DICT={}))

# Collector alias
env.Alias('tutorial_02_partition_mesh', [geometry, partition, mesh] + solverprep)
