#! /usr/bin/env python

import pathlib

# Inherit the parent construction environment
Import(['env', 'project_substitution_dictionary'])

# Set empty alias return list
alias_list = []

# Perform variable substitution on Sphinx configuration file
env.Substfile(
    "conf.py.in",
    SUBST_DICT=project_substitution_dictionary)

# Explicit Sphinx documentation dependency list
documentation_file_list = [
    'conf.py',
    'README.txt',  # Copied from README.rst to docs build directory by root SConscript
    'environment.txt',  # Copied from environment.txt to docs build directory by root SConscript
    'api.rst',
    'cli.rst',
    'build.txt',
    'changelog.rst',
    'contribution.txt',
    'dependencies.txt',
    'devops.rst',
    'documentation.txt',
    'index.rst',
    'project_brief.txt',
    'references.bib',
    'release_philosophy.rst',
    'targets.txt',
    'theory.rst',
    'user.rst',
    'waves_logo_brandmark_smaller.png',
    'zreferences.rst',
    '_static/custom.css'
]

# TODO: os agnostic pathsep for the html directory
# https://re-git.lanl.gov/kbrindley/waves/-/issues/4
sphinx_options = '-W'
html = env.Command(
    # TODO: figure out how to keep the Command in the "build/docs" directory without a leading dummy filename
    # https://re-git.lanl.gov/kbrindley/waves/-/issues/5
    target=['dummy_html', 'html/index.html'],
    source=documentation_file_list,
    action=f"{env['sphinx_build']} ${{sphinx_options}} -b html ${{TARGET.dir.abspath}} ${{TARGET.dir.abspath}}/html",
    sphinx_options=sphinx_options)
env.Clean(html, 'html/')
alias_list.extend(env.Alias('html', html))

# Collector alias to build all documentation
alias_list.extend(env.Alias('documentation', html))

if env['conditional_ignore'] and not env['sphinx_build']:
    print(f"Program 'sphinx-build' was not found in construction environment. Ignoring Sphinx target(s)")
    Ignore(['.', 'html', 'html'], html)
else:
    env.Default(html)

# Return the alias list to SConstruct for help message output
Return('alias_list')
