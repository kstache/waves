#! /usr/bin/env python

import os
import sys
import pathlib

import setuptools_scm
# Only required when WAVES is not installed as a package, e.g. for local testing in WAVES repository.
try:
    import waves
except ModuleNotFoundError:
    sys.path.insert(0, str(pathlib.Path('..').resolve()))
    import waves

try:
    version = setuptools_scm.get_version(root='..')
# Only required for WAVES-EABM in the WAVES repository.
# Most EABMs only need ``setuptools_scm.get_version('.')`` to find their version number.
except LookupError:
    from importlib.metadata import version, PackageNotFoundError
    version = version("waves")

# Make the EABM package importable
sys.path.insert(0, str(pathlib.Path('.').resolve()))

# Comments used in tutorial code snippets: marker-1

# Accept command line variables with fall back default values
variables = Variables(None, ARGUMENTS)
variables.AddVariables(
    PathVariable('variant_dir_base',
        help='SCons variant (build) root directory. Relative or absolute path.',
        default='build',
        validator=PathVariable.PathAccept),
    BoolVariable('conditional_ignore',
        help="Boolean to conditionally ignore targets, e.g. if the action's program is missing.",
        default=True),
    # Used by the WAVES project during packaging. Not required for an EABM.
    BoolVariable('ignore_documentation',
        help="Boolean to ignore the documentation build, e.g. during Conda package build and testing.",
        default=False))

# Comments used in tutorial code snippets: marker-2

# Inherit user's full environment and set project variables
env = Environment(ENV=os.environ.copy(),
                  variables=variables)

# Comments used in tutorial code snippets: marker-3

# Find required programs for conditional target ignoring and absolute path for use in target actions
required_programs = ['sphinx-build', 'abaqus', 'cubit']
conf = env.Configure()
for program in required_programs:
    env[program.replace('-', '_')] = conf.CheckProg(program)
conf.Finish()

# Comments used in tutorial code snippets: marker-4

# Add project command line variable options to help message
Help(variables.GenerateHelpText(env))

# Comments used in tutorial code snippets: marker-5

# Set project internal variables and variable substitution dictionaries
project_name = 'WAVES-EABM'
documentation_source_dir = 'docs'
project_variables = {
    'project_name': project_name,
    'project_dir': Dir('.').abspath,
    'version': version,
    'abaqus_source_dir': 'eabm_package/abaqus',
    'cubit_source_dir': 'eabm_package/cubit',
    'python_source_dir': 'eabm_package/python',
}
project_substitution_dictionary = dict()
for key, value in project_variables.items():
    env[key] = value
    project_substitution_dictionary[f"@{key}@"] = value

# Comments used in tutorial code snippets: marker-6

# Build path object for extension and re-use
variant_dir_base = pathlib.Path(env['variant_dir_base'])

# Add custom builders
env.Append(BUILDERS={'AbaqusJournal': waves.builders.abaqus_journal(abaqus_program=env['abaqus']),
                     'AbaqusSolver': waves.builders.abaqus_solver(abaqus_program=env['abaqus'], env=env),
                     'PythonScript': waves.builders.python_script()})

# Comments used in tutorial code snippets: marker-7

# Add documentation target(s)
# The 'ignore_documentation' variable is used by WAVES during packaging. Not required for an EABM.
if not env['ignore_documentation']:
    build_dir = variant_dir_base / documentation_source_dir
    SConscript(dirs='.', variant_dir=str(variant_dir_base), exports='documentation_source_dir', duplicate=False)
    docs_aliases = SConscript(dirs=documentation_source_dir, variant_dir=str(build_dir), exports=['env', 'project_substitution_dictionary'])
else:
    print(f"The 'ignore_documentation' option was set to 'True'. Skipping documentation SConscript file(s)")
    docs_aliases = []

# Comments used in tutorial code snippets: marker-8

# Add simulation targets
eabm_simulation_directories = [
    'tutorial_cubit',
    'tutorial_01_geometry',
    'tutorial_02_partition_mesh',
    'tutorial_03_solverprep',
    'tutorial_04_simulation',
    'tutorial_05_parameter_substitution',
    'tutorial_06_include_files',
    'tutorial_07_cartesian_product'
]
for source_dir in eabm_simulation_directories:
    build_dir = variant_dir_base / source_dir
    SConscript(dirs=source_dir, variant_dir=build_dir, exports='env', duplicate=False)

# Comments used in tutorial code snippets: marker-9

# Add default target list to help message
default_targets_help = "\nDefault Targets:\n"
for target in DEFAULT_TARGETS:
    default_targets_help += f"    {str(target)}\n"
Help(default_targets_help)

# Comments used in tutorial code snippets: marker-10

# Add aliases to help message so users know what build target options are available
# TODO: recover alias list from SCons variable instead of constructing manually
# https://re-git.lanl.gov/kbrindley/waves/-/issues/33
alias_list = docs_aliases + eabm_simulation_directories
alias_help = "\nTarget Aliases:\n"
for alias in alias_list:
    alias_help += f"    {alias}\n"
Help(alias_help)
