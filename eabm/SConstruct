#! /usr/bin/env python

import os
import sys
import pathlib

import setuptools_scm
# Only required when WAVES is not installed as a package, e.g. for local testing in SCons-simulation repository.
try:
    import waves
except ModuleNotFoundError:
    sys.path.insert(0, str(pathlib.Path('..').resolve()))
    import waves

try:
    version = setuptools_scm.get_version(root='..')
# Only required for SCons-EABM in the SCons-simulation repository.
# Most EABMs only need ``setuptools_scm.get_version()`` to find their version number.
except LookupError:
    from waves import _version
    version = _version.version

# Set an out-of-source build directory. Accept "variant_dir" from command line options.
variant_dir_base = pathlib.Path(ARGUMENTS.get('variant_dir', 'build'))

# Set project internal variables
project_name = 'SCons-EABM'
abaqus_source_dir = pathlib.Path('abaqus')
documentation_source_dir = 'docs'

# Inherit user's full environment and set project variables
env = Environment(ENV=os.environ.copy(),
                  PROJECT_NAME=project_name.lower(),
                  # TODO: Figure out how to use the SCons-simulation version from a subdirectory
                  # https://re-git.lanl.gov/kbrindley/scons-simulation/-/issues/31
                  VERSION=version,
                  PROJECT_DIR=Dir('.').abspath,
                  ABAQUS_SOURCE_DIR=str(abaqus_source_dir))

# Add custom builders
env.Append(BUILDERS={'AbaqusJournal': waves.builders.abaqus_journal(),
                     'AbaqusSolver': waves.builders.abaqus_solver()})

# Add documentation target(s)
build_dir = variant_dir_base / documentation_source_dir
SConscript(dirs='.', variant_dir=str(variant_dir_base), exports='documentation_source_dir', duplicate=False)
SConscript(dirs=documentation_source_dir, variant_dir=str(build_dir), exports='env')

# Add simulation targets
eabm_simulation_directories = [
    'tutorial_01_geometry',
    'tutorial_02_partition_mesh',
    'tutorial_03_solverprep',
    'tutorial_04_simulation'
]
for source_dir in eabm_simulation_directories:
    build_dir = variant_dir_base / source_dir
    SConscript(dirs=source_dir, variant_dir=build_dir, exports='env', duplicate=False)
